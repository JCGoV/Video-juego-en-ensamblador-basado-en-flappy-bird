INCLUDE BIBLIO2.TXT
INCLUDE FONDO.TXT

STACKSG segment para stack 'stack'
DB 50 DUP (0)
STACKSG ENDS

DATASG SEGMENT PARA 'DATA'

YB DB 15H
X1 DB 00
X2 DB 00 
X3 DB 00
X4 DB 00 
X5 DB 00 

CE1 DB 00
CE2 DB 00
CE3 DB 00
CE4 DB 00
CE5 DB 00
CONT_R DB 00

SALTA DB 13,10,'$'
MENSCORE DB 'SCORE: $'
SCORE DB 00
SCORE2 DB 00


DATASG ENDS

CODESG SEGMENT PARA 'CODE'
PRINCI PROC FAR
ASSUME SS:STACKSG, DS:DATASG,CS:CODESG

    INICIO
    CALL GRAPH
    LIMPIAR_PANTALLA
RANDOM:
    MOV CONT_R,00

    CALL SEMILLA
    CALL ALEATORIO
    CALL ESCALANDO

    CMP DL,00
    JE B1 
    CMP DL,01
    JE B2 
    CMP DL,02
    JE B3 
    CMP DL,03
    JE B4
    CMP DL,04
    JE B5  
    JMP RANDOM
B1: 
    CMP CE1,00
    JE RESETX1
B2: CMP CE2,00
    JE RESETX2
B3: CMP CE3,00
    JE RESETX3
B4: CMP CE4,00
    JE RESETX4
B5: CMP CE5,00
    JE RESETX5
    JMP RANDOM

UNO:   
    LEER_CAR

    CMP CE1,1
    JE L1
UNO1:   
    CMP X1,01
    JG BARRERA_UNO
    MOV CE1,0
DOS:
    CMP CE2,1
    JE L2
DOS1:
    CMP X2,01
    JG BARRERA_DOS
    MOV CE2,0
TRES:
   CMP CE3,1
   JE L3
TRES1:
   CMP X3,01
   JG BARRERA_TRES
   MOV CE3,0
CUATRO:
    CMP CE4,1
    JE L4
CUATRO1:
   CMP X4,01
   JG BARRERA_CUATRO
   MOV CE4,0

CINCO:
    CMP CE5,1
    JE L5


CINCO1:
    
;    CMP AL,56D
;    JE UP
;    CMP AL,50D
;    JE DOWN
;    CMP AL,27D
;    JE FIN
    ;JMP DOWN
;UP:
;    DEC YB
;    JMP PINTAR
;DOWN:    
;    INC YB
;PINTAR:
;    ANGRY

    CMP X5,01
    JG BARRERA_CINCO
    MOV CE5,0

JMP UNO

L5:
    CMP CE4,1
    JE CINCO1
   CMP CE3,1
   JE CINCO1
   CMP CE2,1
   JE CINCO1
   CMP CE1,1
   JE CINCO1

   INC CONT_R
   LIMPIAR_PANTALLA
   CMP CONT_R,15H
   JG RANDOM
   JMP CINCO1

L4:
   CMP CE3,1
   JE CUATRO1
   CMP CE2,1
   JE CUATRO1
   CMP CE1,1
   JE CUATRO1
   INC CONT_R
    LIMPIAR_PANTALLA
   CMP CONT_R,15H
   JG RANDOM
   
   JMP CUATRO1

L3: CMP CE2,1
   JE TRES1
   CMP CE1,1
   JE TRES1
   INC CONT_R
    LIMPIAR_PANTALLA
   CMP CONT_R,15H
   JG RANDOM

   JMP  TRES1

L2: 
    CMP CE1,1
    JE DOS1
    INC CONT_R
    LIMPIAR_PANTALLA
    CMP CONT_R,15H
    JG RANDOM

    JMP  DOS1

L1:
    INC CONT_R
    LIMPIAR_PANTALLA  
    CMP CONT_R,15H
    JG RANDOM

    JMP UNO1

BARRERA_UNO:
   PAR1
    DEC X1
    JMP DOS
BARRERA_DOS:
   PAR2
    DEC X2
    JMP TRES
BARRERA_TRES:
   PAR3
   DEC X3
   JMP CUATRO
BARRERA_CUATRO:
   PAR4
   DEC X4
   JMP CINCO
BARRERA_CINCO:
    PAR5
    DEC X5
    JMP UNO

RESETX1: 
   MOV X1,80
   MOV CE1,1
   JMP UNO1
RESETX2: 
    MOV X2,80
    MOV CE2,1
    JMP DOS1
RESETX3: 
    MOV X3,80
    MOV CE3,1
    JMP TRES1
RESETX4: 
    MOV X4,80
    MOV CE4,1
    JMP CUATRO1
RESETX5:  
    MOV X5,80
    MOV CE5,1
    JMP CINCO1

FIN: NOP
    
RET

PRINCI ENDP

GRAPH PROC                   
    MOV AH,00H   
    MOV AL,12H    ;12h = 80x30 8x16 640x480 16/256k A000 VGA, ATI, VIP
    INT 10H         
    RET
GRAPH   ENDP

ALEATORIO PROC
    MOV AX,DX ;CARGANDO A AX EL NUMERO SEMILLA tomado de la int 21 serv2CH
    MOV DX,0 ;CARGANDO CERO EN LA POSICION MAS SIGNIFICATIVA DEL MULTIPLICANDO
    MOV BX,2053 ; MULTIPLICADOR
    MUL BX
    MOV BX,13849 ;CARGA EN BX LA CONSTANTE ADITIVA
    CLC
    ADD AX,BX ; SUMA PARTES MENOS SIGNIFICATIVAS DEL RESULTADO
    ADC DX,0 ; SUMA EL ACARREO SI ES NECESARIO
    MOV BX,0FFFFH ; CARGAR LA CONSTANTE 2**16-1
    DIV BX
    MOV AX,DX ; MUEVE EL RESIDUO AX
    RET
ALEATORIO ENDP

SEMILLA PROC
    PUSH AX
    MOV AH,2CH
    INT 21H ; RETORNA CH=HORAS, EN FORMATO 00-23, MEDIANOCHE=0
    ; CL MINUTOS 00-59
    ;DH SEGUNDOS 00-59
    ;DL CENTESIMAS DE SEGUNDO 00-99
    POP AX
    RET
SEMILLA ENDP

ESCALANDO PROC
    MOV DX,0
    MOV BX,04H ;NUMEROS ALEATORIOS ENTRE 0 Y 9
    DIV BX
    MOV AX,DX
    MOV DL,AH
    MOV DH,AL
    MOV DL,DH
    RET
ESCALANDO ENDP

CODESG ENDS
END PRINCI