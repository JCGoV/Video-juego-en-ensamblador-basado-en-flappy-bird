INICIO MACRO
	push ds
	sub ax,ax
	push ax
	MOV AX,SEG DATASG
	MOV DS,AX
ENDM

;---------------------------
INICIO2 MACRO
	push ds
	sub ax,ax
	push ax
	MOV AX,@DATA
	MOV DS,AX
ENDM

;-------------------
LEER_CAR MACRO
	MOV AH,01	;Deja el caracter leído en al
	INT 21h
ENDM

;---------------------------

ESCRIBIR_CAR MACRO
	PUSH AX
	MOV AH,02	;Caracter a desplegar almacenado en dl
	INT 21h
	POP AX
ENDM

;----------------------------

READ_KEY MACRO
	PUSH AX
	MOV AH,08	;Caracter a desplegar almacenado en dl
	INT 21h
	POP AX
ENDM

;----------------------------

RASTREAR MACRO
	MOV AH,10H
	INT 16H
	CMP AL,00H
	JE RASTREA1
	CMP AL,0E0H
	JE RASTREA1
ENDM

;---------------------------

MENSAJE MACRO
	PUSH AX
	MOV AH,09 ; La direccion se almacena en el registro Dx
	INT 21H
	POP AX
ENDM



;---------------------------

LIMPIAR_PANTALLA MACRO
	PUSH AX
	PUSH BX
	PUSH CX
	PUSH DX
	MOV AX,0600h
	MOV BH,71h ; FONDO BLANCO CON PRIMER PLANO AZUL
	MOV CX,0000h
	MOV DX,1D4Fh
	INT 10H
	POP DX
	POP CX
	POP BX
	POP AX
ENDM

;---------------------------------------------------------------

Desempaqueta MACRO
	Push dx
	Push cx
	Mov dh,dl	; Guardando el valor original en DH
	Mov cl,4
	Shr dl,cl	; Cuatro corrimientos a la derecha
	CALL Binario_Ascii
	Escribe_car
	Mov dl,dh	; Recuperando el dato de DH
	And dl,0Fh	; Aplicando mascara
	CALL Binario_ascii
	Escribe_car
	Pop cx
	Pop dx
ENDM

;---------------------------------------------------------------
Empaqueta MACRO
	Push cx
	LEER_CAR	; Leer el primera car
	Call ascii_binario	;Procesa 1er. caracter
	Mov cl,04
	Shl al,cl	; Instrucción lógica de corrimiento a la izquierda 
	Mov ch,al	; Almacenando el valor de AL a un registro auxiliar
	LEER_CAR	; Leer el segundo car
	Call ascii_binario	;Procesa 2o. caracter
	Add al,ch	; Sumar  el contenido de los registros
	Pop cx
ENDM

;------------------------------

escribe_car MACRO
 PUSH AX
 MOV AH,02 	; Caracter a desplegar almacenado en dl
 INT 21h
 POP AX
 ENDM

;------------------------------------------------------------------

LEE MACRO
MOV AH,01
INT 21H
ENDM

;-------------------------------------------------

Posiciona_cursor MACRO
	PUSH AX
	PUSH BX
	PUSH DX
	MOV AH,02h
	MOV BH,0
	MOV DH,02h
	MOV DL,40h
	INT 10H
	POP DX
	POP BX
	POP AX
ENDM















